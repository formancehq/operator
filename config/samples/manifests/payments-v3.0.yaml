apiVersion: formance.com/v1beta1
kind: VersionManifest
metadata:
  name: payments-v3-0
  labels:
    formance.com/component: payments
    formance.com/generation: v3
    formance.com/architecture: modern-with-worker
spec:
  component: payments
  versionRange: ">=v3.0.0-beta.1"
  extends: ">=v1.0.0-alpha <v3.0.0"

  streams:
    ingestion: "streams/payments"

  migration:
    enabled: true
    strategy: "strict"

  architecture:
    type: stateless
    deployments:
      # API deployment
      - name: "payments"
        replicas: "auto"
        stateful: false
        containers:
          - name: "payments-api"
            args: ["serve"]
            ports:
              - name: "http"
                port: 8080
            healthCheck:
              path: "/_healthcheck"
              type: "http"
            environment:
              - name: "POSTGRES_DATABASE_NAME"
                value: "$(POSTGRES_DATABASE)"
              - name: "CONFIG_ENCRYPTION_KEY"
                valueFrom:
                  settingKey: "payments.encryption-key"
            conditionalEnvironment:
              # Temporal configuration
              - when: "settings.temporal.dsn != ''"
                env:
                  - name: "TEMPORAL_ADDRESS"
                    valueFrom:
                      settingKey: "temporal.dsn"
                  - name: "TEMPORAL_NAMESPACE"
                    valueFrom:
                      settingKey: "temporal.namespace"

              # Temporal worker settings
              - when: "settings.payments.worker.temporal-max-concurrent-workflow-task-pollers != ''"
                env:
                  - name: "TEMPORAL_MAX_CONCURRENT_WORKFLOW_TASK_POLLERS"
                    valueFrom:
                      settingKey: "payments.worker.temporal-max-concurrent-workflow-task-pollers"

      # Worker deployment (new in v3)
      - name: "payments-worker"
        replicas: "1"
        stateful: false
        containers:
          - name: "payments-worker"
            args: ["worker"]
            ports:
              - name: "http"
                port: 8080
            healthCheck:
              path: "/_healthcheck"
              type: "http"
            environment:
              - name: "POSTGRES_DATABASE_NAME"
                value: "$(POSTGRES_DATABASE)"
              - name: "CONFIG_ENCRYPTION_KEY"
                valueFrom:
                  settingKey: "payments.encryption-key"
            conditionalEnvironment:
              # Temporal configuration for worker
              - when: "settings.temporal.dsn != ''"
                env:
                  - name: "TEMPORAL_ADDRESS"
                    valueFrom:
                      settingKey: "temporal.dsn"
                  - name: "TEMPORAL_NAMESPACE"
                    valueFrom:
                      settingKey: "temporal.namespace"
                  - name: "TEMPORAL_INIT_SEARCH_ATTRIBUTES"
                    value: "true"

    # Cleanup old v1/v2 deployments
    cleanup:
      deployments: ["payments-read", "payments-connectors"]
      services: ["payments-read", "payments-connectors"]
      reason: "Migrating from split architecture to unified v3 with worker"

  features:
    broker: true
    temporal: true
    workerSupport: true

  gateway:
    enabled: true
    healthCheckEndpoint: "_healthcheck"

  authorization:
    scopes:
      # Inherit all previous scopes

      # New in v3.0 - Workflow management
      - name: "payments:workflows:read"
        description: "Read payment workflows and their status"
        since: "v3.0.0"

      - name: "payments:workflows:write"
        description: "Trigger and manage payment workflows"
        since: "v3.0.0"

      # Deprecate old granular scopes in favor of unified ones
      - name: "payments:connectors:read"
        description: "Read payment connectors (deprecated, use payments:read)"
        deprecated: true
        replacedBy: "payments:read"
        since: "v0.1.0"

      - name: "payments:connectors:write"
        description: "Manage payment connectors (deprecated, use payments:write)"
        deprecated: true
        replacedBy: "payments:write"
        since: "v0.1.0"