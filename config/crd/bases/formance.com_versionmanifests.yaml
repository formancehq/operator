---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: versionmanifests.formance.com
spec:
  group: formance.com
  names:
    kind: VersionManifest
    listKind: VersionManifestList
    plural: versionmanifests
    singular: versionmanifest
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Component name
      jsonPath: .spec.component
      name: Component
      type: string
    - description: Version range
      jsonPath: .spec.versionRange
      name: Version Range
      type: string
    - description: Architecture type
      jsonPath: .spec.architecture.type
      name: Architecture
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          VersionManifest is the Schema for version manifests.
          It defines the deployment configuration for a specific version range of a component.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VersionManifestSpec defines the desired state of VersionManifest
            properties:
              architecture:
                description: Deployment architecture
                properties:
                  cleanup:
                    properties:
                      deployments:
                        items:
                          type: string
                        type: array
                      reason:
                        type: string
                      services:
                        items:
                          type: string
                        type: array
                    type: object
                  deployments:
                    items:
                      properties:
                        containers:
                          items:
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              conditionalEnvironment:
                                items:
                                  properties:
                                    env:
                                      items:
                                        properties:
                                          name:
                                            type: string
                                          value:
                                            type: string
                                          valueFrom:
                                            properties:
                                              settingKey:
                                                type: string
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    when:
                                      description: Condition expression (e.g., "settings.ledger.experimental-features
                                        == true")
                                      type: string
                                  required:
                                  - env
                                  - when
                                  type: object
                                type: array
                              environment:
                                items:
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                    valueFrom:
                                      properties:
                                        settingKey:
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              healthCheck:
                                properties:
                                  path:
                                    type: string
                                  type:
                                    description: 'Type: "http", "tcp", "exec"'
                                    enum:
                                    - http
                                    - tcp
                                    - exec
                                    type: string
                                required:
                                - path
                                - type
                                type: object
                              name:
                                type: string
                              ports:
                                items:
                                  properties:
                                    name:
                                      type: string
                                    port:
                                      format: int32
                                      type: integer
                                  required:
                                  - name
                                  - port
                                  type: object
                                type: array
                              volumeMounts:
                                items:
                                  properties:
                                    mountPath:
                                      type: string
                                    name:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  required:
                                  - mountPath
                                  - name
                                  type: object
                                type: array
                            required:
                            - name
                            type: object
                          type: array
                        name:
                          type: string
                        replicas:
                          description: 'Replicas: "auto" or integer as string'
                          type: string
                        service:
                          properties:
                            ports:
                              items:
                                properties:
                                  name:
                                    type: string
                                  port:
                                    format: int32
                                    type: integer
                                required:
                                - name
                                - port
                                type: object
                              type: array
                            type:
                              default: ClusterIP
                              description: 'Type: "ClusterIP", "NodePort", "LoadBalancer"'
                              type: string
                          required:
                          - ports
                          type: object
                        stateful:
                          type: boolean
                      required:
                      - containers
                      - name
                      - replicas
                      type: object
                    type: array
                  type:
                    description: 'Type: "stateless", "single-or-multi-writer", "sharded"'
                    enum:
                    - stateless
                    - single-or-multi-writer
                    - sharded
                    type: string
                required:
                - deployments
                - type
                type: object
              authorization:
                description: Authorization configuration (scopes, permissions)
                properties:
                  scopes:
                    description: OAuth/OIDC scopes available for this version
                    items:
                      properties:
                        deprecated:
                          description: Whether this scope is deprecated
                          type: boolean
                        description:
                          description: Human-readable description
                          type: string
                        name:
                          description: Scope name (e.g., "ledger:read", "ledger:write")
                          type: string
                        replacedBy:
                          description: Replacement scope name if deprecated
                          type: string
                        since:
                          description: Version when this scope was introduced
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              component:
                description: Component name (e.g., "ledger", "payments")
                type: string
              envVarPrefix:
                description: Environment variable prefix (e.g., "NUMARY_" or "")
                type: string
              extends:
                description: Inherit from another manifest (optional)
                type: string
              features:
                additionalProperties:
                  type: boolean
                description: Feature flags
                type: object
              gateway:
                description: Gateway configuration
                properties:
                  enabled:
                    type: boolean
                  healthCheckEndpoint:
                    default: _healthcheck
                    type: string
                required:
                - enabled
                type: object
              migration:
                description: Migration configuration
                properties:
                  commands:
                    items:
                      type: string
                    type: array
                  conditions:
                    items:
                      properties:
                        commands:
                          items:
                            type: string
                          type: array
                        versionRange:
                          type: string
                      required:
                      - commands
                      - versionRange
                      type: object
                    type: array
                  enabled:
                    type: boolean
                  strategy:
                    default: strict
                    description: 'Strategy: "strict", "continue-on-error", "skip"'
                    type: string
                required:
                - enabled
                type: object
              streams:
                description: Stream configurations
                properties:
                  ingestion:
                    type: string
                  reindex:
                    type: string
                type: object
              versionRange:
                description: Version range using semver (e.g., ">=v2.2.0 <v2.3.0")
                type: string
            required:
            - architecture
            - component
            - versionRange
            type: object
          status:
            description: VersionManifestStatus defines the observed state of VersionManifest
            properties:
              lastApplied:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
