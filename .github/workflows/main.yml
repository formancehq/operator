on:
  push:
    branches:
      - main
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
  release:
    types: [ prereleased, released ]

name: Default
jobs:
  Pr:
    if: github.event_name == 'pull_request'
    uses: numary/gh-workflows/.github/workflows/pr-style.yml@main

  Lint:
    uses: numary/gh-workflows/.github/workflows/golang-lint.yml@main
    with:
      go_version: 1.18

  Test:
    uses: numary/gh-workflows/.github/workflows/golang-test.yml@main

  Docker:
    name: 'Build Docker'
    runs-on: ubuntu-latest
    needs:
      - Lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: CGO_ENABLED=0 GOOS=linux go build -v -a -o manager main.go
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: "NumaryBot"
          password: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - name: Build and push Released
        if: github.event.action == 'released'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          target: release
          tags: ghcr.io/formancehq/operator:latest,ghcr.io/formancehq/operator:${{ github.event.release.tag_name }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=${{ github.event.release.tag_name }}
      - name: Build and push PreReleased
        if: github.event.action == 'prereleased'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          target: release
          tags: ghcr.io/formancehq/operator:${{ github.event.release.tag_name }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=${{ github.event.release.tag_name }}
      - name: Build and push
        if: github.event.action != 'released' || github.event.action != 'prereleased'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          target: release
          tags: ghcr.io/formancehq/operator:${{ github.sha }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=develop
