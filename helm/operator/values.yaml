# Default values for operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # Add your license information 
  licence:
    # -- Licence Secret with label `formance.com/stack: any`
    # @section -- Licence
    createSecret: true
    # -- Licence Environment 
    # @section -- Licence configuration
    issuer: "https://license.formance.cloud/keys"
    # -- Licence Client Token delivered by contacting [Formance](https://formance.com)
    # @section -- Licence configuration
    token: ""
    # -- Licence Client Token as a secret
    # @section -- Licence configuration
    existingSecret: ""
    secretKeys:
      # -- Hardcoded in the operator
      token: "token"

replicaCount: 1

image:
  repository: ghcr.io/formancehq/operator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

operator:
  # Enable development mode for the operator
  disableWebhooks: false

  dev: false
  # The region to use for the operator
  region: "eu-west-1"
  # The environment to use for the operator
  env: "staging"
  # The address the metric endpoint binds to
  metricsAddr: ":8080"
  # The address the probe endpoint binds to
  probeAddr: ":8081"
  # Enable leader election for controller manager. Enabling this will ensure there is only one active controller manager.
  enableLeaderElection: true

  utils:
    tag: ""

podAnnotations: {}

podSecurityContext: {} # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # allowPrivilegeEscalation: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

webhooks:
  enabled: false

operator-crds:
  create: true
