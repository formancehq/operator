---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: cors-all
spec:
  headers:
    accessControlAllowOriginList:
    - "*"
    accessControlAllowHeaders:
    - "Authorization"
    - "content-type"
    accessControlAllowMethods:
    - "*"
    accessControlAllowCredentials: true
    accessControlMaxAge: 100
    addVaryHeader: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: stripprefix
spec:
  stripPrefix:
    prefixes:
    - /api/auth
    - /api/dex
    - /api/jaeger
    - /api/ledger
    - /api/webhooks
---
apiVersion: stack.formance.com/v1beta2
kind: Configuration
metadata:
  name: stacks
spec:
  # Define global ingress configuration
  ingress:
    annotations:
      traefik.ingress.kubernetes.io/router.middlewares: default-stripprefix@kubernetescrd, default-cors-all@kubernetescrd
  monitoring:
    traces:
      otlp:
        endpoint: otel-collector-opentelemetry-collector.default.svc.cluster.local
        insecure: true
        mode: grpc
        port: 4317
        resourceAttributes: "toto=maxence"
  kafka:
    brokers:
      - redpanda.default.svc.cluster.local:9092
  services:
    auth:
      postgres:
        host: postgres-postgresql.default.svc.cluster.local
        port: 5432
        username: formance
        password: formance
      staticClients:
      - id: foo
        public: true
        secrets:
        - bar
    ledger:
      postgres:
        host: postgres-postgresql.default.svc.cluster.local
        port: 5432
        username: formance
        password: formance
        disableSSLMode: true
      locking:
        strategy: redis
        redis:
          uri: redis://redis-headless.default.svc.cluster.local:6379
    payments:
      mongoDB:
        host: mongodb-svc.default.svc.cluster.local
        port: 27017
        username: root
        password: very-secured-password
    search:
      elasticSearch:
        host: zinc.default.svc.cluster.local
        port: 4080
        scheme: http
        pathPrefix: /api
        basicAuth:
          username: admin
          password: "Complexpass#123"
    webhooks:
      postgres:
        host: postgres-postgresql.default.svc.cluster.local
        port: 5432
        username: formance
        password: formance
    next:
      postgres:
        host: postgres-postgresql.default.svc.cluster.local
        port: 5432
        username: formance
        password: formance
        disableSSLMode: true
---
apiVersion: stack.formance.com/v1beta2
kind: Versions
metadata:
  name: default
spec:
  control: 59e871d64514ec01c84ea18b34cf0788d17d7f63
  search: fa29fbcfa983990ef1042274e3d928713865b6a7
  next: 4a47bc37e00802242be2d00f4c3e3a91fa251145
---
apiVersion: stack.formance.com/v1beta2
kind: Stack
metadata:
  name: stack1
spec:
  debug: true
  dev: true
  scheme: http
  host: host.k3d.internal
  seed: stacks
  auth:
    delegatedOIDCServer:
      issuer: http://host.k3d.internal/api/dex
      clientID: dexclient
      clientSecret: dexclient
    staticClients:
    - id: foo2
      secrets:
      - bar2
